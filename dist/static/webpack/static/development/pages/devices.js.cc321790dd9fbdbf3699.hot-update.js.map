{"version":3,"file":"static/webpack/static\\development\\pages\\devices.js.cc321790dd9fbdbf3699.hot-update.js","sources":["webpack:///./src/Client/Client.ts"],"sourcesContent":["import msgpack from \"@ygoe/msgpack\";\r\nimport {\r\n  EnumerateMidiDevicesRequest,\r\n  EnumerateMidiDevicesResponse\r\n} from \"./Commands/Command\";\r\n\r\nexport class Client {\r\n  private socket!: WebSocket;\r\n\r\n  public get Socket() {\r\n    return this.socket;\r\n  }\r\n\r\n  public async connect() {\r\n    if (!process.browser) {\r\n      return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      (window as any).client = this;\r\n\r\n      this.socket = new WebSocket(`ws://${location.host}:55367`);\r\n      console.log(\"Opening websocket connection...\");\r\n      this.socket.onerror = event => {\r\n        console.error(\"[Websocket] Errored:\", event);\r\n      };\r\n      this.socket.onclose = event => {\r\n        console.log(\"[Websocket] Closed:\", event);\r\n      };\r\n      this.socket.onopen = event => {\r\n        console.log(\"[Websocket] Opened:\", event);\r\n        resolve();\r\n      };\r\n      this.socket.onmessage = async event => {\r\n        var message = msgpack.deserialize(\r\n          await new Response(event.data as Blob).arrayBuffer()\r\n        );\r\n        var command = EnumerateMidiDevicesResponse.FromMessagePack(message);\r\n        console.log(\"[Websocket] Received:\", message);\r\n      };\r\n    });\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAaA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AACA;AAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AALA;AACA;AADA;AAAA;;;;A","sourceRoot":""}