{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport msgpack from \"@ygoe/msgpack\";\nimport { EnumerateMidiDevicesResponse } from \"./Commands/Command\";\nexport var Client =\n/*#__PURE__*/\nfunction () {\n  function Client() {\n    _classCallCheck(this, Client);\n\n    _defineProperty(this, \"socket\", void 0);\n  }\n\n  _createClass(Client, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (process.browser) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                return _context2.abrupt(\"return\", new _Promise(function (resolve, reject) {\n                  window.client = _this;\n                  _this.socket = new WebSocket(\"ws://\".concat(location.hostname, \":55367\"));\n                  console.log(\"Opening websocket connection...\");\n\n                  _this.socket.onerror = function (event) {\n                    console.error(\"[Websocket] Errored:\", event);\n                  };\n\n                  _this.socket.onclose = function (event) {\n                    console.log(\"[Websocket] Closed:\", event);\n                  };\n\n                  _this.socket.onopen = function (event) {\n                    console.log(\"[Websocket] Opened:\", event);\n                    resolve();\n                  };\n\n                  _this.socket.onmessage =\n                  /*#__PURE__*/\n                  function () {\n                    var _ref = _asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee(event) {\n                      var message, command;\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.t0 = msgpack;\n                              _context.next = 3;\n                              return new Response(event.data).arrayBuffer();\n\n                            case 3:\n                              _context.t1 = _context.sent;\n                              message = _context.t0.deserialize.call(_context.t0, _context.t1);\n                              command = EnumerateMidiDevicesResponse.FromMessagePack(message);\n                              console.log(\"[Websocket] Received:\", message);\n\n                            case 7:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    return function (_x) {\n                      return _ref.apply(this, arguments);\n                    };\n                  }();\n                }));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"Socket\",\n    get: function get() {\n      return this.socket;\n    }\n  }]);\n\n  return Client;\n}();","map":{"version":3,"sources":["C:/code/sightreader/performer/src/Client/Client.ts"],"names":["msgpack","EnumerateMidiDevicesResponse","Client","process","browser","resolve","reject","window","client","socket","WebSocket","location","hostname","console","log","onerror","event","error","onclose","onopen","onmessage","Response","data","arrayBuffer","message","deserialize","command","FromMessagePack"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,SAEEC,4BAFF,QAGO,oBAHP;AAKA,WAAaC,MAAb;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQSC,OAAO,CAACC,OARjB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kDAYW,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrCC,kBAAAA,MAAD,CAAgBC,MAAhB,GAAyB,KAAzB;AAEA,kBAAA,KAAI,CAACC,MAAL,GAAc,IAAIC,SAAJ,gBAAsBC,QAAQ,CAACC,QAA/B,YAAd;AACAC,kBAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AACA,kBAAA,KAAI,CAACL,MAAL,CAAYM,OAAZ,GAAsB,UAAAC,KAAK,EAAI;AAC7BH,oBAAAA,OAAO,CAACI,KAAR,CAAc,sBAAd,EAAsCD,KAAtC;AACD,mBAFD;;AAGA,kBAAA,KAAI,CAACP,MAAL,CAAYS,OAAZ,GAAsB,UAAAF,KAAK,EAAI;AAC7BH,oBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAnC;AACD,mBAFD;;AAGA,kBAAA,KAAI,CAACP,MAAL,CAAYU,MAAZ,GAAqB,UAAAH,KAAK,EAAI;AAC5BH,oBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAnC;AACAX,oBAAAA,OAAO;AACR,mBAHD;;AAIA,kBAAA,KAAI,CAACI,MAAL,CAAYW,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAwB,iBAAMJ,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACRhB,OADQ;AAAA;AAAA,qCAEd,IAAIqB,QAAJ,CAAaL,KAAK,CAACM,IAAnB,EAAiCC,WAAjC,EAFc;;AAAA;AAAA;AAClBC,8BAAAA,OADkB,eACAC,WADA;AAIlBC,8BAAAA,OAJkB,GAIRzB,4BAA4B,CAAC0B,eAA7B,CAA6CH,OAA7C,CAJQ;AAKtBX,8BAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCU,OAArC;;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAxB;;AAAA;AAAA;AAAA;AAAA;AAOD,iBAtBM,CAZX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAGsB;AAClB,aAAO,KAAKf,MAAZ;AACD;AALH;;AAAA;AAAA","sourcesContent":["import msgpack from \"@ygoe/msgpack\";\r\nimport {\r\n  EnumerateMidiDevicesRequest,\r\n  EnumerateMidiDevicesResponse\r\n} from \"./Commands/Command\";\r\n\r\nexport class Client {\r\n  private socket!: WebSocket;\r\n\r\n  public get Socket() {\r\n    return this.socket;\r\n  }\r\n\r\n  public async connect() {\r\n    if (!process.browser) {\r\n      return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      (window as any).client = this;\r\n\r\n      this.socket = new WebSocket(`ws://${location.hostname}:55367`);\r\n      console.log(\"Opening websocket connection...\");\r\n      this.socket.onerror = event => {\r\n        console.error(\"[Websocket] Errored:\", event);\r\n      };\r\n      this.socket.onclose = event => {\r\n        console.log(\"[Websocket] Closed:\", event);\r\n      };\r\n      this.socket.onopen = event => {\r\n        console.log(\"[Websocket] Opened:\", event);\r\n        resolve();\r\n      };\r\n      this.socket.onmessage = async event => {\r\n        var message = msgpack.deserialize(\r\n          await new Response(event.data as Blob).arrayBuffer()\r\n        );\r\n        var command = EnumerateMidiDevicesResponse.FromMessagePack(message);\r\n        console.log(\"[Websocket] Received:\", message);\r\n      };\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}