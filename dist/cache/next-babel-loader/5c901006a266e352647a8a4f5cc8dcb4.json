{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\sightreader\\\\performer\\\\src\\\\ScoresPane.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box, Paper, InputBase } from \"@material-ui/core\";\nimport { SightReaderClient } from \"./SightReaderClient\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport IconButton from \"@material-ui/core/IconButton\";\nconst useStyles = makeStyles(theme => createStyles({\n  paperTableContainer: {\n    marginTop: theme.spacing(3),\n    width: \"100%\",\n    overflowX: \"auto\",\n    marginBottom: theme.spacing(2),\n    background: theme.palette.primary.light\n  },\n  tableCell: {\n    cursor: \"pointer\"\n  },\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 400,\n    background: theme.palette.primary.light\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  },\n  activeScoreSection: {\n    marginBottom: theme.spacing(2)\n  }\n}));\nexport default function ScoresPane() {\n  const classes = useStyles();\n  const {\n    0: scoreFilter,\n    1: setScoreFilter\n  } = useState(\"\");\n  const {\n    0: scores,\n    1: setScores\n  } = useState([]);\n  const {\n    0: activeScore,\n    1: setActiveScore\n  } = useState(\"\");\n  useEffect(() => {\n    SightReaderClient.Instance.EnumerateScores().then(result => {\n      setScores(result.FilePaths);\n      setActiveScore(result.ActiveScoreFilePath);\n    });\n  }, []);\n\n  const onSelectScore = scoreFilePath => {\n    SightReaderClient.Instance.LoadScore(scoreFilePath).then(result => {\n      SightReaderClient.Instance.setScore(result.Score);\n      setActiveScore(result.ActiveScoreFilePath);\n    });\n  };\n\n  const filteredScores = scores.filter(x => x.substring(x.lastIndexOf(\"\\\\\") + 1).toLowerCase().includes(scoreFilter.toLowerCase()));\n  return __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Scores\"), __jsx(Box, {\n    className: classes.activeScoreSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, activeScore.length > 0 && __jsx(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Playing:\"), \" \", activeScore.substring(activeScore.lastIndexOf(\"\\\\\") + 1))), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(InputBase, {\n    className: classes.input,\n    placeholder: \"Filter scores...\",\n    onChange: ({\n      target\n    }) => setScoreFilter(target.value ? target.value : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), __jsx(IconButton, {\n    className: classes.iconButton,\n    \"aria-label\": \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(SearchIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))), __jsx(Paper, {\n    className: classes.paperTableContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(Table, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, filteredScores.length > 0 && filteredScores.map(score => __jsx(TableRow, {\n    key: score,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    className: classes.tableCell,\n    onClick: () => onSelectScore(score),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, score.substring(score.lastIndexOf(\"\\\\\") + 1)))), filteredScores.length === 0 && __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, scoreFilter.length > 0 ? `0 results for '${scoreFilter}' (${scores.length} total scores).` : \"Loading...\")))))));\n}","map":{"version":3,"sources":["C:/code/sightreader/performer/src/ScoresPane.tsx"],"names":["React","useState","useEffect","createStyles","makeStyles","Typography","Box","Paper","InputBase","SightReaderClient","Table","TableBody","TableCell","TableRow","SearchIcon","IconButton","useStyles","theme","paperTableContainer","marginTop","spacing","width","overflowX","marginBottom","background","palette","primary","light","tableCell","cursor","root","padding","display","alignItems","input","marginLeft","flex","iconButton","divider","height","margin","activeScoreSection","ScoresPane","classes","scoreFilter","setScoreFilter","scores","setScores","activeScore","setActiveScore","Instance","EnumerateScores","then","result","FilePaths","ActiveScoreFilePath","onSelectScore","scoreFilePath","LoadScore","setScore","Score","filteredScores","filter","x","substring","lastIndexOf","toLowerCase","includes","length","target","value","map","score"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Client } from \"../src/Client/Client\";\r\nimport SettingsInputSvideoTwoToneIcon from \"@material-ui/icons/SettingsInputSvideoTwoTone\";\r\nimport {\r\n  Fab,\r\n  Box,\r\n  Paper,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Switch,\r\n  InputBase\r\n} from \"@material-ui/core\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MenuBookTwoToneIcon from \"@material-ui/icons/MenuBookTwoTone\";\r\nimport clsx from \"clsx\";\r\nimport { SightReaderClient } from \"./SightReaderClient\";\r\nimport {\r\n  EnumerateMidiDevicesResponse,\r\n  EnumerateScoresResponse\r\n} from \"./Client/Commands/Command\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport theme from \"./theme\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paperTableContainer: {\r\n      marginTop: theme.spacing(3),\r\n      width: \"100%\",\r\n      overflowX: \"auto\",\r\n      marginBottom: theme.spacing(2),\r\n      background: theme.palette.primary.light\r\n    },\r\n    tableCell: {\r\n      cursor: \"pointer\"\r\n    },\r\n    root: {\r\n      padding: \"2px 4px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      width: 400,\r\n      background: theme.palette.primary.light\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1\r\n    },\r\n    iconButton: {\r\n      padding: 10\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4\r\n    },\r\n    activeScoreSection: {\r\n      marginBottom: theme.spacing(2)\r\n    }\r\n  })\r\n);\r\n\r\nexport default function ScoresPane() {\r\n  const classes = useStyles();\r\n  const [scoreFilter, setScoreFilter] = useState<string>(\"\");\r\n  const [scores, setScores] = useState<string[]>([]);\r\n  const [activeScore, setActiveScore] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    SightReaderClient.Instance.EnumerateScores().then(result => {\r\n      setScores(result.FilePaths);\r\n      setActiveScore(result.ActiveScoreFilePath);\r\n    });\r\n  }, []);\r\n\r\n  const onSelectScore = (scoreFilePath: string) => {\r\n    SightReaderClient.Instance.LoadScore(scoreFilePath).then(result => {\r\n      SightReaderClient.Instance.setScore(result.Score);\r\n      setActiveScore(result.ActiveScoreFilePath);\r\n    });\r\n  };\r\n\r\n  const filteredScores = scores.filter(x =>\r\n    x\r\n      .substring(x.lastIndexOf(\"\\\\\") + 1)\r\n      .toLowerCase()\r\n      .includes(scoreFilter.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Scores\r\n      </Typography>\r\n      <Box className={classes.activeScoreSection}>\r\n        {activeScore.length > 0 && (\r\n          <Typography variant=\"body1\" gutterBottom>\r\n            <strong>Playing:</strong>{\" \"}\r\n            {activeScore.substring(activeScore.lastIndexOf(\"\\\\\") + 1)}\r\n          </Typography>\r\n        )}\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Paper className={classes.root}>\r\n          <InputBase\r\n            className={classes.input}\r\n            placeholder=\"Filter scores...\"\r\n            onChange={({ target }) =>\r\n              setScoreFilter(target!.value ? target!.value : \"\")\r\n            }\r\n          />\r\n          <IconButton className={classes.iconButton} aria-label=\"search\">\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Paper>\r\n        <Paper className={classes.paperTableContainer}>\r\n          <Table size=\"small\">\r\n            <TableBody>\r\n              {filteredScores.length > 0 &&\r\n                filteredScores.map(score => (\r\n                  <TableRow key={score}>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      className={classes.tableCell}\r\n                      onClick={() => onSelectScore(score)}\r\n                    >\r\n                      {score.substring(score.lastIndexOf(\"\\\\\") + 1)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              {filteredScores.length === 0 && (\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {scoreFilter.length > 0\r\n                      ? `0 results for '${scoreFilter}' (${scores.length} total scores).`\r\n                      : \"Loading...\"}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}