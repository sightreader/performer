{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box, Paper, FormGroup, FormControlLabel, Switch } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { SightReaderClient } from \"./SightReaderClient\";\nimport { EnumerateMidiDevicesResponse } from \"./Client/Commands/Command\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    containerRoot: {\n      padding: theme.spacing(1)\n    },\n    containerIo: {\n      padding: theme.spacing(3, 2),\n      background: theme.palette.primary.light,\n      flexGrow: 1,\n      marginRight: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n      marginTop: theme.spacing(1)\n    },\n    containerInput: {\n      padding: theme.spacing(3, 2)\n    },\n    containerOutput: {\n      padding: theme.spacing(3, 2)\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    },\n    margin: {\n      margin: theme.spacing(1)\n    }\n  };\n});\nexport default function MidiDevicesPane() {\n  var classes = useStyles();\n\n  var _useState = useState(new EnumerateMidiDevicesResponse()),\n      midiDevices = _useState[0],\n      setMidiDevices = _useState[1];\n\n  useEffect(function () {\n    SightReaderClient.Instance.EnumerateMidiDevices().then(function (midiDevices) {\n      setMidiDevices(midiDevices);\n    });\n  }, []);\n\n  var onInputDeviceChecked = function onInputDeviceChecked(toggledDeviceName) {\n    SightReaderClient.Instance.SelectMidiDevices([toggledDeviceName], []).then(function (midiDevices) {\n      setMidiDevices(midiDevices);\n    });\n  };\n\n  var onOutputDeviceChecked = function onOutputDeviceChecked(toggledDeviceName) {\n    SightReaderClient.Instance.SelectMidiDevices([], [toggledDeviceName]).then(function (midiDevices) {\n      setMidiDevices(midiDevices);\n    });\n  };\n\n  return __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\"\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true\n  }, \"MIDI Devices\"), __jsx(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true\n  }, \"Changes made on this page apply instantly.\"), __jsx(Box, {\n    display: \"flex\",\n    width: \"100%\"\n  }, __jsx(Paper, {\n    className: clsx(classes.containerIo, classes.containerOutput)\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h3\"\n  }, \"Inputs\"), __jsx(FormGroup, null, midiDevices.InputDeviceNames.map(function (deviceName, index) {\n    return __jsx(FormControlLabel, {\n      key: deviceName,\n      control: __jsx(Switch, {\n        checked: !!midiDevices.EnabledInputDeviceNames[index],\n        onChange: function onChange() {\n          return onInputDeviceChecked(deviceName);\n        },\n        value: deviceName,\n        color: \"secondary\"\n      }),\n      label: deviceName\n    });\n  }))), __jsx(Paper, {\n    className: clsx(classes.containerIo, classes.containerOutput)\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h3\"\n  }, \"Outputs\"), __jsx(FormGroup, null, midiDevices.OutputDeviceNames.map(function (deviceName, index) {\n    return __jsx(FormControlLabel, {\n      key: deviceName,\n      control: __jsx(Switch, {\n        checked: !!midiDevices.EnabledOutputDeviceNames[index],\n        onChange: function onChange() {\n          return onOutputDeviceChecked(deviceName);\n        },\n        value: deviceName,\n        color: \"secondary\"\n      }),\n      label: deviceName\n    });\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}