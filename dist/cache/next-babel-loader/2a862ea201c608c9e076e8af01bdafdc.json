{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport msgpack from \"@ygoe/msgpack\";\nimport { EnumerateMidiDevicesResponse } from \"./Commands/Command\";\nexport var Client =\n/*#__PURE__*/\nfunction () {\n  function Client() {\n    _classCallCheck(this, Client);\n\n    _defineProperty(this, \"socket\", void 0);\n  }\n\n  _createClass(Client, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (process.browser) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                return _context2.abrupt(\"return\", new _Promise(function (resolve, reject) {\n                  window.client = _this;\n                  _this.socket = new WebSocket(\"ws://\".concat(location.host, \":55367\"));\n                  console.log(\"Opening websocket connection...\");\n\n                  _this.socket.onerror = function (event) {\n                    console.error(\"[Websocket] Errored:\", event);\n                  };\n\n                  _this.socket.onclose = function (event) {\n                    console.log(\"[Websocket] Closed:\", event);\n                  };\n\n                  _this.socket.onopen = function (event) {\n                    console.log(\"[Websocket] Opened:\", event);\n                    resolve();\n                  };\n\n                  _this.socket.onmessage =\n                  /*#__PURE__*/\n                  function () {\n                    var _ref = _asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee(event) {\n                      var message, command;\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.t0 = msgpack;\n                              _context.next = 3;\n                              return new Response(event.data).arrayBuffer();\n\n                            case 3:\n                              _context.t1 = _context.sent;\n                              message = _context.t0.deserialize.call(_context.t0, _context.t1);\n                              command = EnumerateMidiDevicesResponse.FromMessagePack(message);\n                              console.log(\"[Websocket] Received:\", message);\n\n                            case 7:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    return function (_x) {\n                      return _ref.apply(this, arguments);\n                    };\n                  }();\n                }));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"Socket\",\n    get: function get() {\n      return this.socket;\n    }\n  }]);\n\n  return Client;\n}();","map":null,"metadata":{},"sourceType":"module"}