{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\sightreader\\\\performer\\\\src\\\\PlayScoreNavbarComponents.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Box } from \"@material-ui/core\";\nimport SkipPreviousTwoToneIcon from \"@material-ui/icons/SkipPreviousTwoTone\";\nimport SkipNextTwoToneIcon from \"@material-ui/icons/SkipNextTwoTone\";\nimport ArrowBackIosTwoToneIcon from \"@material-ui/icons/ArrowBackIosTwoTone\";\nimport ArrowForwardIosTwoToneIcon from \"@material-ui/icons/ArrowForwardIosTwoTone\";\nimport { SightReaderClient } from \"./SightReaderClient\";\nconst useStyles = makeStyles(theme => ({\n  containerRoot: {\n    paddingTop: theme.spacing(3)\n  },\n  skipIcon: {\n    paddingLeft: theme.spacing(1) / 2,\n    paddingRight: theme.spacing(1) / 2\n  }\n}));\nexport default function PlayScoreNavbarComponents() {\n  const classes = useStyles();\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const open = Boolean(anchorEl);\n  return __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    width: \"100%\",\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    color: \"secondary\",\n    className: classes.skipIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(SkipPreviousTwoToneIcon, {\n    onClick: () => window.rerenderScore(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), __jsx(IconButton, {\n    color: \"secondary\",\n    className: classes.skipIcon,\n    onClick: () => {\n      const windowVar = window;\n      const previousPageNumber = windowVar.pageNumber > 1 ? windowVar.pageNumber - 1 : 1;\n      windowVar.rerenderScore(previousPageNumber);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(ArrowBackIosTwoToneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), __jsx(IconButton, {\n    color: \"secondary\",\n    className: classes.skipIcon,\n    onClick: () => {\n      SightReaderClient.Instance.getVerovio().then(verovio => {\n        const windowVar = window;\n        const maxPageNumber = verovio.getPageCount();\n        console.log(\"windowVar.pageNumber, maxPageNumber:\", windowVar.pageNumber, maxPageNumber);\n        const nextPageNumber = windowVar.pageNumber < maxPageNumber ? windowVar.pageNumber + 1 : maxPageNumber;\n        windowVar.rerenderScore(nextPageNumber);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(ArrowForwardIosTwoToneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), __jsx(IconButton, {\n    color: \"secondary\",\n    className: classes.skipIcon,\n    onClick: () => {\n      SightReaderClient.Instance.getVerovio().then(verovio => {\n        const maxPageNumber = verovio.getPageCount();\n        window.rerenderScore(maxPageNumber);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(SkipNextTwoToneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:/code/sightreader/performer/src/PlayScoreNavbarComponents.tsx"],"names":["React","useState","makeStyles","IconButton","Box","SkipPreviousTwoToneIcon","SkipNextTwoToneIcon","ArrowBackIosTwoToneIcon","ArrowForwardIosTwoToneIcon","SightReaderClient","useStyles","theme","containerRoot","paddingTop","spacing","skipIcon","paddingLeft","paddingRight","PlayScoreNavbarComponents","classes","anchorEl","setAnchorEl","open","Boolean","window","rerenderScore","windowVar","previousPageNumber","pageNumber","Instance","getVerovio","then","verovio","maxPageNumber","getPageCount","console","log","nextPageNumber"],"mappings":"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","sourcesContent":["import React, { useState, useRef, Fragment } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Client } from \"../src/Client/Client\";\nimport SettingsInputSvideoIcon from \"@material-ui/icons/SettingsInputSvideo\";\nimport { Fab, Box } from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Navbar from \"../src/Navbar\";\nimport MidiDevicesPane from \"../src/MidiDevicesPane\";\n\nimport SkipPreviousTwoToneIcon from \"@material-ui/icons/SkipPreviousTwoTone\";\nimport SkipNextTwoToneIcon from \"@material-ui/icons/SkipNextTwoTone\";\nimport ArrowBackIosTwoToneIcon from \"@material-ui/icons/ArrowBackIosTwoTone\";\nimport ArrowForwardIosTwoToneIcon from \"@material-ui/icons/ArrowForwardIosTwoTone\";\nimport { SightReaderClient } from \"./SightReaderClient\";\n\nconst useStyles = makeStyles(theme => ({\n  containerRoot: {\n    paddingTop: theme.spacing(3)\n  },\n  skipIcon: {\n    paddingLeft: theme.spacing(1) / 2,\n    paddingRight: theme.spacing(1) / 2\n  }\n}));\n\nexport default function PlayScoreNavbarComponents() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"flex-start\"\n      width=\"100%\"\n      height=\"100%\"\n    >\n      <IconButton color=\"secondary\" className={classes.skipIcon}>\n        <SkipPreviousTwoToneIcon\n          onClick={() => (window as any).rerenderScore(1)}\n        />\n      </IconButton>\n      <IconButton\n        color=\"secondary\"\n        className={classes.skipIcon}\n        onClick={() => {\n          const windowVar = window as any;\n          const previousPageNumber =\n            windowVar.pageNumber > 1 ? windowVar.pageNumber - 1 : 1;\n          windowVar.rerenderScore(previousPageNumber);\n        }}\n      >\n        <ArrowBackIosTwoToneIcon />\n      </IconButton>\n      <IconButton\n        color=\"secondary\"\n        className={classes.skipIcon}\n        onClick={() => {\n          SightReaderClient.Instance.getVerovio().then((verovio: any) => {\n            const windowVar = window as any;\n            const maxPageNumber = verovio.getPageCount();\n            console.log(\n              \"windowVar.pageNumber, maxPageNumber:\",\n              windowVar.pageNumber,\n              maxPageNumber\n            );\n            const nextPageNumber =\n              windowVar.pageNumber < maxPageNumber\n                ? windowVar.pageNumber + 1\n                : maxPageNumber;\n            windowVar.rerenderScore(nextPageNumber);\n          });\n        }}\n      >\n        <ArrowForwardIosTwoToneIcon />\n      </IconButton>\n      <IconButton\n        color=\"secondary\"\n        className={classes.skipIcon}\n        onClick={() => {\n          SightReaderClient.Instance.getVerovio().then((verovio: any) => {\n            const maxPageNumber = verovio.getPageCount();\n            (window as any).rerenderScore(maxPageNumber);\n          });\n        }}\n      >\n        <SkipNextTwoToneIcon />\n      </IconButton>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}