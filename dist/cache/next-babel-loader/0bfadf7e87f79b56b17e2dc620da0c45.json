{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\sightreader\\\\performer\\\\src\\\\Navbar.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, Fragment, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsInputSvideoTwoToneIcon from \"@material-ui/icons/SettingsInputSvideoTwoTone\";\nimport { Box, Divider } from \"@material-ui/core\";\nimport MenuBookTwoToneIcon from \"@material-ui/icons/MenuBookTwoTone\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport TouchAppTwoToneIcon from \"@material-ui/icons/TouchAppTwoTone\";\nimport screenfull from \"screenfull\";\nimport FullscreenExitTwoToneIcon from \"@material-ui/icons/FullscreenExitTwoTone\";\nimport FullscreenTwoToneIcon from \"@material-ui/icons/FullscreenTwoTone\";\nconst useStyles = makeStyles(t => ({\n  activeIcon: {\n    color: t.palette.secondary.contrastText\n  },\n  divider: {\n    marginLeft: t.spacing(0)\n  }\n}));\nexport default function Navbar(props) {\n  const router = useRouter();\n  const classes = useStyles();\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const {\n    0: isFullScreen,\n    1: setFullScreen\n  } = useState(screenfull.isEnabled && screenfull.isFullscreen);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  useEffect(() => {\n    var fullScreenApi = screenfull;\n\n    if (isFullScreen && !fullScreenApi.isFullscreen) {\n      fullScreenApi.request();\n    } else if (!isFullScreen && fullScreenApi.isFullscreen) {\n      fullScreenApi.exit();\n    }\n  }, [isFullScreen]);\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    position: \"static\",\n    \"data-name\": \"navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    variant: \"dense\",\n    style: {\n      height: 50\n    },\n    disableGutters: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, props.leftBarComponents ? props.leftBarComponents : null, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    width: \"100%\",\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: () => setFullScreen(!isFullScreen),\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, isFullScreen ? __jsx(FullscreenExitTwoToneIcon, {\n    className: classes.activeIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }) : __jsx(FullscreenTwoToneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), __jsx(Divider, {\n    orientation: \"vertical\",\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: handleMenu,\n    color: \"secondary\",\n    className: router.pathname === \"/\" ? classes.activeIcon : undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(TouchAppTwoToneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), __jsx(Link, {\n    href: \"/scores\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: handleMenu,\n    color: \"secondary\",\n    className: router.pathname === \"/scores\" ? classes.activeIcon : undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(MenuBookTwoToneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))), __jsx(Link, {\n    href: \"/devices\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: handleMenu,\n    color: \"secondary\",\n    className: router.pathname === \"/devices\" ? classes.activeIcon : undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(SettingsInputSvideoTwoToneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })))))));\n}\nNavbar.defaultProps = {\n  leftBarComponents: null\n};","map":{"version":3,"sources":["C:/code/sightreader/performer/src/Navbar.tsx"],"names":["React","useState","Fragment","useEffect","makeStyles","AppBar","Toolbar","IconButton","SettingsInputSvideoTwoToneIcon","Box","Divider","MenuBookTwoToneIcon","useRouter","Link","TouchAppTwoToneIcon","screenfull","FullscreenExitTwoToneIcon","FullscreenTwoToneIcon","useStyles","t","activeIcon","color","palette","secondary","contrastText","divider","marginLeft","spacing","Navbar","props","router","classes","anchorEl","setAnchorEl","isFullScreen","setFullScreen","isEnabled","isFullscreen","handleMenu","event","currentTarget","fullScreenApi","request","exit","height","leftBarComponents","pathname","undefined","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef, Fragment, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Client } from \"../src/Client/Client\";\r\nimport SettingsInputSvideoTwoToneIcon from \"@material-ui/icons/SettingsInputSvideoTwoTone\";\r\nimport { Fab, Box, Divider } from \"@material-ui/core\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MenuBookTwoToneIcon from \"@material-ui/icons/MenuBookTwoTone\";\r\nimport { useRouter } from \"next/router\";\r\nimport Link from \"next/link\";\r\nimport TouchAppTwoToneIcon from \"@material-ui/icons/TouchAppTwoTone\";\r\nimport screenfull from \"screenfull\";\r\nimport FullscreenExitTwoToneIcon from \"@material-ui/icons/FullscreenExitTwoTone\";\r\nimport FullscreenTwoToneIcon from \"@material-ui/icons/FullscreenTwoTone\";\r\n\r\nconst useStyles = makeStyles(t => ({\r\n  activeIcon: {\r\n    color: t.palette.secondary.contrastText\r\n  },\r\n  divider: {\r\n    marginLeft: t.spacing(0)\r\n  }\r\n}));\r\n\r\ninterface NavbarProps {\r\n  leftBarComponents: JSX.Element;\r\n}\r\n\r\nexport default function Navbar(props: NavbarProps) {\r\n  const router = useRouter();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [isFullScreen, setFullScreen] = useState(\r\n    screenfull.isEnabled && screenfull.isFullscreen\r\n  );\r\n\r\n  const handleMenu = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  useEffect(() => {\r\n    var fullScreenApi = screenfull as any;\r\n\r\n    if (isFullScreen && !fullScreenApi.isFullscreen) {\r\n      fullScreenApi.request();\r\n    } else if (!isFullScreen && fullScreenApi.isFullscreen) {\r\n      fullScreenApi.exit();\r\n    }\r\n  }, [isFullScreen]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"static\" data-name=\"navbar\">\r\n        <Toolbar variant=\"dense\" style={{ height: 50 }} disableGutters>\r\n          {props.leftBarComponents ? props.leftBarComponents : null}\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"flex-end\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          >\r\n            <IconButton\r\n              onClick={() => setFullScreen(!isFullScreen)}\r\n              color=\"secondary\"\r\n            >\r\n              {isFullScreen ? (\r\n                <FullscreenExitTwoToneIcon className={classes.activeIcon} />\r\n              ) : (\r\n                <FullscreenTwoToneIcon />\r\n              )}\r\n            </IconButton>\r\n            <Divider orientation=\"vertical\" className={classes.divider} />\r\n            <Link href=\"/\">\r\n              <IconButton\r\n                onClick={handleMenu}\r\n                color=\"secondary\"\r\n                className={\r\n                  router.pathname === \"/\" ? classes.activeIcon : undefined\r\n                }\r\n              >\r\n                <TouchAppTwoToneIcon />\r\n              </IconButton>\r\n            </Link>\r\n            <Link href=\"/scores\">\r\n              <IconButton\r\n                onClick={handleMenu}\r\n                color=\"secondary\"\r\n                className={\r\n                  router.pathname === \"/scores\" ? classes.activeIcon : undefined\r\n                }\r\n              >\r\n                <MenuBookTwoToneIcon />\r\n              </IconButton>\r\n            </Link>\r\n            <Link href=\"/devices\">\r\n              <IconButton\r\n                onClick={handleMenu}\r\n                color=\"secondary\"\r\n                className={\r\n                  router.pathname === \"/devices\"\r\n                    ? classes.activeIcon\r\n                    : undefined\r\n                }\r\n              >\r\n                <SettingsInputSvideoTwoToneIcon />\r\n              </IconButton>\r\n            </Link>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  leftBarComponents: null\r\n};\r\n"]},"metadata":{},"sourceType":"module"}