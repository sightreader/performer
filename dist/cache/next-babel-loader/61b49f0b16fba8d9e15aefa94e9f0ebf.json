{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, Fragment, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsInputSvideoTwoToneIcon from \"@material-ui/icons/SettingsInputSvideoTwoTone\";\nimport { Box, Divider } from \"@material-ui/core\";\nimport MenuBookTwoToneIcon from \"@material-ui/icons/MenuBookTwoTone\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport TouchAppTwoToneIcon from \"@material-ui/icons/TouchAppTwoTone\";\nimport screenfull from \"screenfull\";\nimport FullscreenExitTwoToneIcon from \"@material-ui/icons/FullscreenExitTwoTone\";\nimport FullscreenTwoToneIcon from \"@material-ui/icons/FullscreenTwoTone\";\nvar useStyles = makeStyles(function (t) {\n  return {\n    activeIcon: {\n      color: t.palette.secondary.contrastText\n    },\n    divider: {\n      marginLeft: t.spacing(0)\n    }\n  };\n});\nexport default function Navbar(props) {\n  var router = useRouter();\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      anchorEl = _useState[0],\n      setAnchorEl = _useState[1];\n\n  var _useState2 = useState(screenfull.isEnabled && screenfull.isFullscreen),\n      isFullScreen = _useState2[0],\n      setFullScreen = _useState2[1];\n\n  var handleMenu = function handleMenu(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  useEffect(function () {\n    var fullScreenApi = screenfull;\n\n    if (isFullScreen && !fullScreenApi.isFullscreen) {\n      fullScreenApi.request();\n    } else if (!isFullScreen && fullScreenApi.isFullscreen) {\n      fullScreenApi.exit();\n    }\n  }, [isFullScreen]);\n  return __jsx(Fragment, null, __jsx(AppBar, {\n    position: \"static\",\n    \"data-name\": \"navbar\"\n  }, __jsx(Toolbar, {\n    variant: \"dense\",\n    style: {\n      height: 50\n    },\n    disableGutters: true\n  }, props.leftBarComponents ? props.leftBarComponents : null, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    width: \"100%\",\n    height: \"100%\"\n  }, __jsx(IconButton, {\n    onClick: function onClick() {\n      return setFullScreen(!isFullScreen);\n    },\n    color: \"secondary\"\n  }, isFullScreen ? __jsx(FullscreenExitTwoToneIcon, {\n    className: classes.activeIcon\n  }) : __jsx(FullscreenTwoToneIcon, null)), __jsx(Divider, {\n    orientation: \"vertical\",\n    className: classes.divider\n  }), __jsx(Link, {\n    href: \"/play\"\n  }, __jsx(IconButton, {\n    onClick: handleMenu,\n    color: \"secondary\",\n    className: router.pathname === \"/play\" ? classes.activeIcon : undefined\n  }, __jsx(TouchAppTwoToneIcon, null))), __jsx(Link, {\n    href: \"/scores\"\n  }, __jsx(IconButton, {\n    onClick: handleMenu,\n    color: \"secondary\",\n    className: router.pathname === \"/scores\" ? classes.activeIcon : undefined\n  }, __jsx(MenuBookTwoToneIcon, null))), __jsx(Link, {\n    href: \"/devices\"\n  }, __jsx(IconButton, {\n    onClick: handleMenu,\n    color: \"secondary\",\n    className: router.pathname === \"/devices\" ? classes.activeIcon : undefined\n  }, __jsx(SettingsInputSvideoTwoToneIcon, null)))))));\n}\nNavbar.defaultProps = {\n  leftBarComponents: null\n};","map":null,"metadata":{},"sourceType":"module"}