{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport msgpack from \"@ygoe/msgpack\";\nimport { EnumerateMidiDevicesResponse } from \"./Commands/Command\";\nexport class Client {\n  constructor() {\n    _defineProperty(this, \"socket\", void 0);\n  }\n\n  get Socket() {\n    return this.socket;\n  }\n\n  async connect() {\n    if (!process.browser) {\n      return;\n    }\n\n    return new _Promise((resolve, reject) => {\n      window.client = this;\n      this.socket = new WebSocket(`ws://${location.hostname}:55367`);\n      console.log(\"Opening websocket connection...\");\n\n      this.socket.onerror = event => {\n        console.error(\"[Websocket] Errored:\", event);\n      };\n\n      this.socket.onclose = event => {\n        console.log(\"[Websocket] Closed:\", event);\n      };\n\n      this.socket.onopen = event => {\n        console.log(\"[Websocket] Opened:\", event);\n        resolve();\n      };\n\n      this.socket.onmessage = async event => {\n        var message = msgpack.deserialize((await new Response(event.data).arrayBuffer()));\n        var command = EnumerateMidiDevicesResponse.FromMessagePack(message);\n        console.log(\"[Websocket] Received:\", message);\n      };\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/code/sightreader/performer/src/Client/Client.ts"],"names":["msgpack","EnumerateMidiDevicesResponse","Client","Socket","socket","connect","process","browser","resolve","reject","window","client","WebSocket","location","hostname","console","log","onerror","event","error","onclose","onopen","onmessage","message","deserialize","Response","data","arrayBuffer","command","FromMessagePack"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,SAEEC,4BAFF,QAGO,oBAHP;AAKA,OAAO,MAAMC,MAAN,CAAa;AAAA;AAAA;AAAA;;AAGlB,MAAWC,MAAX,GAAoB;AAClB,WAAO,KAAKC,MAAZ;AACD;;AAED,QAAaC,OAAb,GAAuB;AACrB,QAAI,CAACC,OAAO,CAACC,OAAb,EAAsB;AACpB;AACD;;AAED,WAAO,aAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrCC,MAAAA,MAAD,CAAgBC,MAAhB,GAAyB,IAAzB;AAEA,WAAKP,MAAL,GAAc,IAAIQ,SAAJ,CAAe,QAAOC,QAAQ,CAACC,QAAS,QAAxC,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AACA,WAAKZ,MAAL,CAAYa,OAAZ,GAAsBC,KAAK,IAAI;AAC7BH,QAAAA,OAAO,CAACI,KAAR,CAAc,sBAAd,EAAsCD,KAAtC;AACD,OAFD;;AAGA,WAAKd,MAAL,CAAYgB,OAAZ,GAAsBF,KAAK,IAAI;AAC7BH,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAnC;AACD,OAFD;;AAGA,WAAKd,MAAL,CAAYiB,MAAZ,GAAqBH,KAAK,IAAI;AAC5BH,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAnC;AACAV,QAAAA,OAAO;AACR,OAHD;;AAIA,WAAKJ,MAAL,CAAYkB,SAAZ,GAAwB,MAAMJ,KAAN,IAAe;AACrC,YAAIK,OAAO,GAAGvB,OAAO,CAACwB,WAAR,EACZ,MAAM,IAAIC,QAAJ,CAAaP,KAAK,CAACQ,IAAnB,EAAiCC,WAAjC,EADM,EAAd;AAGA,YAAIC,OAAO,GAAG3B,4BAA4B,CAAC4B,eAA7B,CAA6CN,OAA7C,CAAd;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCO,OAArC;AACD,OAND;AAOD,KAtBM,CAAP;AAuBD;;AAnCiB","sourcesContent":["import msgpack from \"@ygoe/msgpack\";\r\nimport {\r\n  EnumerateMidiDevicesRequest,\r\n  EnumerateMidiDevicesResponse\r\n} from \"./Commands/Command\";\r\n\r\nexport class Client {\r\n  private socket!: WebSocket;\r\n\r\n  public get Socket() {\r\n    return this.socket;\r\n  }\r\n\r\n  public async connect() {\r\n    if (!process.browser) {\r\n      return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      (window as any).client = this;\r\n\r\n      this.socket = new WebSocket(`ws://${location.hostname}:55367`);\r\n      console.log(\"Opening websocket connection...\");\r\n      this.socket.onerror = event => {\r\n        console.error(\"[Websocket] Errored:\", event);\r\n      };\r\n      this.socket.onclose = event => {\r\n        console.log(\"[Websocket] Closed:\", event);\r\n      };\r\n      this.socket.onopen = event => {\r\n        console.log(\"[Websocket] Opened:\", event);\r\n        resolve();\r\n      };\r\n      this.socket.onmessage = async event => {\r\n        var message = msgpack.deserialize(\r\n          await new Response(event.data as Blob).arrayBuffer()\r\n        );\r\n        var command = EnumerateMidiDevicesResponse.FromMessagePack(message);\r\n        console.log(\"[Websocket] Received:\", message);\r\n      };\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}