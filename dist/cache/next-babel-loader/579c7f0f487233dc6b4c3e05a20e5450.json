{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box, Paper, FormGroup, FormControlLabel, Switch } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { SightReaderClient } from \"./SightReaderClient\";\nimport { EnumerateMidiDevicesResponse } from \"./Client/Commands/Command\";\nconst useStyles = makeStyles(theme => ({\n  containerRoot: {\n    padding: theme.spacing(1)\n  },\n  containerIo: {\n    padding: theme.spacing(3, 2),\n    background: theme.palette.primary.light,\n    flexGrow: 1,\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(1)\n  },\n  containerInput: {\n    padding: theme.spacing(3, 2)\n  },\n  containerOutput: {\n    padding: theme.spacing(3, 2)\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function MidiDevicesPane() {\n  const classes = useStyles();\n  const {\n    0: midiDevices,\n    1: setMidiDevices\n  } = useState(new EnumerateMidiDevicesResponse());\n  useEffect(() => {\n    SightReaderClient.Instance.EnumerateMidiDevices().then(midiDevices => {\n      setMidiDevices(midiDevices);\n    });\n  }, []);\n\n  const onInputDeviceChecked = toggledDeviceName => {\n    SightReaderClient.Instance.SelectMidiDevices([toggledDeviceName], []).then(midiDevices => {\n      setMidiDevices(midiDevices);\n    });\n  };\n\n  const onOutputDeviceChecked = toggledDeviceName => {\n    SightReaderClient.Instance.SelectMidiDevices([], [toggledDeviceName]).then(midiDevices => {\n      setMidiDevices(midiDevices);\n    });\n  };\n\n  return __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\"\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true\n  }, \"MIDI Devices\"), __jsx(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true\n  }, \"Changes made on this page apply instantly.\"), __jsx(Box, {\n    display: \"flex\",\n    width: \"100%\"\n  }, __jsx(Paper, {\n    className: clsx(classes.containerIo, classes.containerOutput)\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h3\"\n  }, \"Inputs\"), __jsx(FormGroup, null, midiDevices.InputDeviceNames.map((deviceName, index) => __jsx(FormControlLabel, {\n    key: deviceName,\n    control: __jsx(Switch, {\n      checked: !!midiDevices.EnabledInputDeviceNames[index],\n      onChange: () => onInputDeviceChecked(deviceName),\n      value: deviceName,\n      color: \"secondary\"\n    }),\n    label: deviceName\n  })))), __jsx(Paper, {\n    className: clsx(classes.containerIo, classes.containerOutput)\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h3\"\n  }, \"Outputs\"), __jsx(FormGroup, null, midiDevices.OutputDeviceNames.map((deviceName, index) => __jsx(FormControlLabel, {\n    key: deviceName,\n    control: __jsx(Switch, {\n      checked: !!midiDevices.EnabledOutputDeviceNames[index],\n      onChange: () => onOutputDeviceChecked(deviceName),\n      value: deviceName,\n      color: \"secondary\"\n    }),\n    label: deviceName\n  }))))));\n}","map":null,"metadata":{},"sourceType":"module"}